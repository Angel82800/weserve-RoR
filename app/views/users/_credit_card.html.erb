<p class="head-para red"><%= t('commons.payout_us_card') %></p>
<form action="/users/<%= current_user.id %>/credit_card" method="post" id="example-form" class="wallet-bank-form" >
  <%= hidden_field_tag :authenticity_token, form_authenticity_token, id: 'credit_card_token' %>
  <div class="form-row">
    <label>Card Number</label>
    <input type="text" maxlength="20" autocomplete="off" class="card-number stripe-sensitive required" id="card-number" />
  </div>

  <div class="form-row">
    <label>CVC</label>
    <input type="text" maxlength="4" autocomplete="off" class="card-cvc stripe-sensitive required" />
  </div>

  <div class="form-row">
    <label>Expiration</label>
    <div class="expiry-wrapper">
      <select class="card-expiry-month stripe-sensitive required">
      </select>
      <script type="text/javascript">
        var select = $(".card-expiry-month"),
         month = new Date().getMonth() + 1;
        for (var i = 1; i <= 12; i++) {
          select.append($("<option value='"+i+"' "+(month === i ? "selected" : "")+">"+i+"</option>"))
        }
      </script>
      <span> / </span>
      <select class="card-expiry-year stripe-sensitive required"></select>
      <script type="text/javascript">
        var select = $(".card-expiry-year"),
            year = new Date().getFullYear();

        for (var i = 0; i < 12; i++) {
            select.append($("<option value='"+(i + year)+"' "+(i === 0 ? "selected" : "")+">"+(i + year)+"</option>"))
        }
      </script>
    </div>
  </div>

  <div class="card-cancel">
    <a href= <%= payout_method_user_path %> >Cancel</a>
    <button type="submit" name="submit-button" class="add-btn-root">Submit</button>
  </div>

  <span class="payment-errors"></span>
</form>
  <script>if (window.Stripe) $("#example-form").show()</script>
  <noscript><p>JavaScript is required for the registration form.</p></noscript>
  <script type="text/javascript" src="https://js.stripe.com/v2/"></script>
  <script type="text/javascript">
  Stripe.setPublishableKey('<%= Rails.configuration.stripe[:publishable_key] %>');
  $(document).ready(function() {
      function addInputNames() {
          // Not ideal, but jQuery's validate plugin requires fields to have names
          // so we add them at the last possible minute, in case any javascript
          // exceptions have caused other parts of the script to fail.
          $(".card-number").attr("name", "card-number");
          $(".card-cvc").attr("name", "card-cvc");
          $(".card-expiry-year").attr("name", "card-expiry-year");
      }

      function removeInputNames() {
          $(".card-number").removeAttr("name");
          $(".card-cvc").removeAttr("name");
          $(".card-expiry-year").removeAttr("name");
      }

      function submit(form) {
          // remove the input field names for security
          // we do this *before* anything else which might throw an exception
          removeInputNames(); // THIS IS IMPORTANT!

          // given a valid form, submit the payment details to stripe
          $(form['submit-button']).attr("disabled", "disabled");

          Stripe.createToken({
              number: $('.card-number').val(),
              cvc: $('.card-cvc').val(),
              exp_month: $('.card-expiry-month').val(),
              exp_year: $('.card-expiry-year').val(),
              currency: 'usd' // From Stripe docs: Currently, the only supported currency for debit card transfers is usd.
          }, function(status, response) {
              if (response.error) {
                  // re-enable the submit button
                  $(form['submit-button']).removeAttr("disabled");

                  // show the error
                  $(".payment-errors").html(response.error.message);

                  // we add these names back in so we can revalidate properly
                  addInputNames();
              } else {
                  // token contains id, last4, and card type
                  var token = response['id'];

                  // insert the stripe token
                  var input = $("<input name='stripeToken' value='" + token + "' style='display:none;' />");
                  form.appendChild(input[0]);

                  // and submit
                  form.submit();
              }
          });

          return false;
      }

      // add custom rules for credit card validating
      jQuery.validator.addMethod("cardNumber", Stripe.validateCardNumber, "Please enter a valid card number");
      jQuery.validator.addMethod("cardCVC", Stripe.validateCVC, "Please enter a valid security code");
      jQuery.validator.addMethod("cardExpiry", function() {
          return Stripe.validateExpiry($(".card-expiry-month").val(),
                                       $(".card-expiry-year").val())
      }, "Please enter a valid expiration");

      // We use the jQuery validate plugin to validate required params on submit
      $("#example-form").validate({
          submitHandler: submit,
          rules: {
              "card-cvc" : {
                  cardCVC: true,
                  required: true
              },
              "card-number" : {
                  cardNumber: true,
                  required: true
              },
              "card-expiry-year" : "cardExpiry" // we don't validate month separately
          }
      });

      // adding the input field names is the last step, in case an earlier step errors
      addInputNames();
  });
  $("#card-number").keyup(function (e) {
        var CCNValue = $(this).val();
        CCNValue = CCNValue.replace(/ /g, '');

        var CCNLength = CCNValue.length;
        var m = 1;
        var arr = CCNValue.split('');
        var ccnnewval = "";

        if (arr.length > 0) {
            for (var m = 0; m < arr.length; m++) {
                if (m === 4 || m === 8 || m === 12) {
                    ccnnewval = ccnnewval + ' ';
                }

                if (m >= 6 && m <= 11) {
                    ccnnewval = ccnnewval + arr[m]
                } else {
                    ccnnewval = ccnnewval + arr[m];
                }
            }
        }
        $("#card-number").val(ccnnewval);
      });
</script>
